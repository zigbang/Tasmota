[env:tasmota32_base]
framework               = ${common.framework}
platform                = ${common32.platform}
platform_packages       = ${common32.platform_packages}
board                   = ${common32.board}
board_build.ldscript    = ${common32.board_build.ldscript}
board_build.partitions  = ${common32.board_build.partitions}
board_build.flash_mode  = ${common32.board_build.flash_mode}
board_build.f_flash     = ${common32.board_build.f_flash}
board_build.f_cpu       = ${common32.board_build.f_cpu}
monitor_speed           = ${common32.monitor_speed}
upload_port             = ${common32.upload_port}
upload_resetmethod      = ${common32.upload_resetmethod}
upload_speed            = ${common32.upload_speed}
extra_scripts           = ${common32.extra_scripts}
build_unflags           = ${common32.build_unflags}
build_flags             = ${common32.build_flags}
lib_extra_dirs          = ${common32.lib_extra_dirs}
lib_ldf_mode            = ${common32.lib_ldf_mode}
lib_compat_mode         = ${common32.lib_compat_mode}
lib_ignore              =
    ESP32 Azure IoT Arduino
    ESP32 Async UDP
    ESP32 BLE Arduino
;    SimpleBLE
    NetBIOS
    ESP32
    Preferences
    BluetoothSerial
; Disable next if you want to use ArduinoOTA in Tasmota32 (default disabled)
    ArduinoOTA

[env:tasmota32]
extends                 = env:tasmota32_base
build_flags             = ${common32.build_flags} -DFIRMWARE_TASMOTA32

[env:tasmota32-webcam]
extends                 = env:tasmota32_base
board                   = esp32cam
board_build.f_cpu       = 240000000L
board_build.flash_mode  = qio
board_build.f_flash     = 80000000L
build_flags             = ${common32.build_flags} -DBOARD_HAS_PSRAM -mfix-esp32-psram-cache-issue -lc-psram-workaround -lm-psram-workaround -DFIRMWARE_WEBCAM
lib_extra_dirs          = lib/libesp32, lib/lib_basic

[env:tasmota32-odroidgo]
extends                 = env:tasmota32_base
board                   = odroid_esp32
board_build.f_cpu       = 240000000L
board_build.flash_mode  = qio
board_build.f_flash     = 80000000L
upload_speed            = 2000000
board_build.partitions  = esp32_partition_app1984k_spiffs12M.csv
build_flags             = ${common32.build_flags} -DBOARD_HAS_PSRAM -mfix-esp32-psram-cache-issue -lc-psram-workaround -lm-psram-workaround -DFIRMWARE_ODROID_GO
lib_extra_dirs          = lib/libesp32, lib/lib_basic, lib/lib_i2c, lib/lib_rf, lib/lib_div, lib/lib_ssl, lib/lib_display

[env:tasmota32-core2]
extends                 = env:tasmota32_base
board                   = odroid_esp32
board_build.f_cpu       = 240000000L
board_build.flash_mode  = qio
board_build.f_flash     = 80000000L
upload_speed            = 2000000
board_build.partitions  = esp32_partition_app1984k_spiffs12M.csv
build_flags             = ${common32.build_flags} -DBOARD_HAS_PSRAM -mfix-esp32-psram-cache-issue -lc-psram-workaround -lm-psram-workaround -DFIRMWARE_M5STACK_CORE2
lib_extra_dirs          = lib/libesp32, lib/lib_basic, lib/lib_i2c, lib/lib_rf, lib/lib_div, lib/lib_ssl, lib/lib_display, lib/lib_audio

[env:tasmota32-bluetooth]
extends                 = env:tasmota32_base
build_flags             = ${common32.build_flags} -DFIRMWARE_BLUETOOTH
lib_extra_dirs          = lib/libesp32, lib/libesp32_div, lib/lib_basic, lib/lib_i2c, lib/lib_ssl

[env:tasmota32-display]
extends                 = env:tasmota32_base
build_flags             = ${common32.build_flags} -DFIRMWARE_DISPLAYS
lib_extra_dirs          = lib/libesp32, lib/lib_basic, lib/lib_display

[env:tasmota32-ir]
extends                 = env:tasmota32_base
build_flags             = ${common32.build_flags} ${irremoteesp_full.build_flags} -DFIRMWARE_IR
lib_extra_dirs          = lib/libesp32, lib/lib_basic

[env:tasmota32-ircustom]
extends                 = env:tasmota32_base
build_flags             = ${common32.build_flags} ${irremoteesp_full.build_flags} -DFIRMWARE_IR_CUSTOM

[env:tasmota32-AF]
extends                 = env:tasmota32_base
build_flags             = ${common32.build_flags} -DMY_LANGUAGE=af_AF -DFIRMWARE_TASMOTA32

[env:tasmota32-BG]
extends                 = env:tasmota32_base
build_flags             = ${common32.build_flags} -DMY_LANGUAGE=bg_BG -DFIRMWARE_TASMOTA32

[env:tasmota32-BR]
extends                 = env:tasmota32_base
build_flags             = ${common32.build_flags} -DMY_LANGUAGE=pt_BR -DFIRMWARE_TASMOTA32

[env:tasmota32-CN]
extends                 = env:tasmota32_base
build_flags             = ${common32.build_flags} -DMY_LANGUAGE=zh_CN -DFIRMWARE_TASMOTA32

[env:tasmota32-CZ]
extends                 = env:tasmota32_base
build_flags             = ${common32.build_flags} -DMY_LANGUAGE=cs_CZ -DFIRMWARE_TASMOTA32

[env:tasmota32-DE]
extends                 = env:tasmota32_base
build_flags             = ${common32.build_flags} -DMY_LANGUAGE=de_DE -DFIRMWARE_TASMOTA32

[env:tasmota32-ES]
extends                 = env:tasmota32_base
build_flags             = ${common32.build_flags} -DMY_LANGUAGE=es_ES -DFIRMWARE_TASMOTA32

[env:tasmota32-FR]
extends                 = env:tasmota32_base
build_flags             = ${common32.build_flags} -DMY_LANGUAGE=fr_FR -DFIRMWARE_TASMOTA32

[env:tasmota32-FY]
extends                 = env:tasmota32_base
build_flags             = ${common32.build_flags} -DMY_LANGUAGE=fy_NL -DFIRMWARE_TASMOTA32

[env:tasmota32-GR]
extends                 = env:tasmota32_base
build_flags             = ${common32.build_flags} -DMY_LANGUAGE=el_GR -DFIRMWARE_TASMOTA32

[env:tasmota32-HE]
extends                 = env:tasmota32_base
build_flags             = ${common32.build_flags} -DMY_LANGUAGE=he_HE -DFIRMWARE_TASMOTA32

[env:tasmota32-HU]
extends                 = env:tasmota32_base
build_flags             = ${common32.build_flags} -DMY_LANGUAGE=hu_HU -DFIRMWARE_TASMOTA32

[env:tasmota32-IT]
extends                 = env:tasmota32_base
build_flags             = ${common32.build_flags} -DMY_LANGUAGE=it_IT -DFIRMWARE_TASMOTA32

[env:tasmota32-KO]
extends                 = env:tasmota32_base
build_flags             = ${common32.build_flags} -DMY_LANGUAGE=ko_KO -DFIRMWARE_TASMOTA32

[env:tasmota32-NL]
extends                 = env:tasmota32_base
build_flags             = ${common32.build_flags} -DMY_LANGUAGE=nl_NL -DFIRMWARE_TASMOTA32

[env:tasmota32-PL]
extends                 = env:tasmota32_base
build_flags             = ${common32.build_flags} -DMY_LANGUAGE=pl_PL -DFIRMWARE_TASMOTA32

[env:tasmota32-PT]
extends                 = env:tasmota32_base
build_flags             = ${common32.build_flags} -DMY_LANGUAGE=pt_PT -DFIRMWARE_TASMOTA32

[env:tasmota32-RO]
extends                 = env:tasmota32_base
build_flags             = ${common32.build_flags} -DMY_LANGUAGE=ro_RO -DFIRMWARE_TASMOTA32

[env:tasmota32-RU]
extends                 = env:tasmota32_base
build_flags             = ${common32.build_flags} -DMY_LANGUAGE=ru_RU -DFIRMWARE_TASMOTA32

[env:tasmota32-SE]
extends                 = env:tasmota32_base
build_flags             = ${common32.build_flags} -DMY_LANGUAGE=sv_SE -DFIRMWARE_TASMOTA32

[env:tasmota32-SK]
extends                 = env:tasmota32_base
build_flags             = ${common32.build_flags} -DMY_LANGUAGE=sk_SK -DFIRMWARE_TASMOTA32

[env:tasmota32-TR]
extends                 = env:tasmota32_base
build_flags             = ${common32.build_flags} -DMY_LANGUAGE=tr_TR -DFIRMWARE_TASMOTA32

[env:tasmota32-TW]
extends                 = env:tasmota32_base
build_flags             = ${common32.build_flags} -DMY_LANGUAGE=zh_TW -DFIRMWARE_TASMOTA32

[env:tasmota32-UK]
extends                 = env:tasmota32_base
build_flags             = ${common32.build_flags} -DMY_LANGUAGE=uk_UA -DFIRMWARE_TASMOTA32

[env:tasmota32-VN]
extends                 = env:tasmota32_base
build_flags             = ${common32.build_flags} -DMY_LANGUAGE=vi_VN -DFIRMWARE_TASMOTA32
