; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter, extra scripting
;   Upload options: custom port, speed and extra flags
;   Library options: dependencies, extra library storages
;
; Please visit documentation for the other options and examples
; http://docs.platformio.org/en/stable/projectconf.html

[platformio]
src_dir = tasmota
build_dir = .pioenvs
build_cache_dir = .cache
extra_configs = platformio_override.ini

; *** Build/upload environment
default_envs = 
; *** Uncomment by deleting ";" in the line(s) below to select version(s)
;                tasmota
;                tasmota-ircustom     ; alternative to 'tasmota' with full IR protocols activated, you will need to disable some features to keep code not too big
;                tasmota-minimal
;                tasmota-basic
;                tasmota-knx
;                tasmota-sensors
;                tasmota-display
;                tasmota-ir
;                tasmota-BG
;                tasmota-BR
;                tasmota-CN
;                tasmota-CZ
;                tasmota-DE
;                tasmota-ES
;                tasmota-FR
;                tasmota-GR
;                tasmota-HE
;                tasmota-HU
;                tasmota-IT
;                tasmota-KO
;                tasmota-NL
;                tasmota-PL
;                tasmota-PT
;                tasmota-RU
;                tasmota-SE
;                tasmota-SK
;                tasmota-TR
;                tasmota-TW
;                tasmota-UK
;
; *** alternatively can be done in: pio/platformio_override.ini
; *** See example: platformio_override_sample.ini in folder pio
; *********************************************************************


[common]
framework                 = arduino
board                     = esp01_1m
board_build.flash_mode    = dout

platform                  = ${core_active.platform}
build_flags               = ${core_active.build_flags}

; *********************************************************************
; *** Uncomment, by deleting ";" in line below, to use custom settings from file user_config_override.h 
;                            -DUSE_CONFIG_OVERRIDE
;
; *** alternatively can be done in: pio/platformio_override.ini
; *** See example: platformio_override_sample.ini in folder pio
; *********************************************************************

; *** Fix espressif8266@1.7.0 induced undesired all warnings
build_unflags             = -Wall

board_build.f_cpu         = 80000000L
monitor_speed             = 115200
upload_speed              = 115200
; *** Upload Serial reset method for Wemos and NodeMCU
upload_resetmethod        = nodemcu
upload_port               = COM5
extra_scripts             = ${scripts_defaults.extra_scripts}

[scripts_defaults]
extra_scripts             = pio/strip-floats.py
                            pio/name-firmware.py

[esp82xx_defaults]
build_flags               = -D NDEBUG
                            -mtarget-align
                            -Wl,-Map,firmware.map

[core_active]
platform                  = ${core_2_6_1.platform}
build_flags               = ${core_2_6_1.build_flags}

[core_2_6_1]
; *** Esp8266 core for Arduino version 2.6.1
platform                  = espressif8266@2.3.0
build_flags               = ${esp82xx_defaults.build_flags}
                            -Wl,-Teagle.flash.1m.ld
                            -DBEARSSL_SSL_BASIC
; NONOSDK22x_190703 = 2.2.2-dev(38a443e)
                            -DPIO_FRAMEWORK_ARDUINO_ESPRESSIF_SDK22x_190703
; lwIP 2 - Higher Bandwidth no Features
                            -DPIO_FRAMEWORK_ARDUINO_LWIP2_HIGHER_BANDWIDTH_LOW_FLASH
; VTABLES in Flash
                            -DVTABLES_IN_FLASH
; No exception code in firmware
                            -fno-exceptions
                            -lstdc++

[env]
platform = ${common.platform}
framework = ${common.framework}
board = ${common.board}
board_build.flash_mode = ${common.board_build.flash_mode}
board_build.f_cpu = ${common.board_build.f_cpu}
build_unflags = ${common.build_unflags}
build_flags = ${common.build_flags}
monitor_speed = ${common.monitor_speed}
upload_port = ${common.upload_port}
upload_resetmethod = ${common.upload_resetmethod}
upload_speed = ${common.upload_speed}
extra_scripts = ${common.extra_scripts}

[env:tasmota]

[env:tasmota-minimal]
build_flags = ${common.build_flags} -DFIRMWARE_MINIMAL

[env:tasmota-basic]
build_flags = ${common.build_flags} -DFIRMWARE_BASIC

[env:tasmota-knx]
build_flags = ${common.build_flags} -DFIRMWARE_KNX_NO_EMULATION

[env:tasmota-sensors]
build_flags = ${common.build_flags} -DFIRMWARE_SENSORS

[env:tasmota-display]
build_flags = ${common.build_flags} -DFIRMWARE_DISPLAYS

[env:tasmota-ir]
build_flags = ${common.build_flags} -DUSE_IR_REMOTE_FULL -DFIRMWARE_IR

[env:tasmota-ircustom]
build_flags = ${common.build_flags} -DUSE_IR_REMOTE_FULL

[env:tasmota-BG]
build_flags = ${common.build_flags} -DMY_LANGUAGE=bg-BG

[env:tasmota-BR]
build_flags = ${common.build_flags} -DMY_LANGUAGE=pt-BR

[env:tasmota-CN]
build_flags = ${common.build_flags} -DMY_LANGUAGE=zh-CN

[env:tasmota-CZ]
build_flags = ${common.build_flags} -DMY_LANGUAGE=cs-CZ

[env:tasmota-DE]
build_flags = ${common.build_flags} -DMY_LANGUAGE=de-DE

[env:tasmota-ES]
build_flags = ${common.build_flags} -DMY_LANGUAGE=es-ES

[env:tasmota-FR]
build_flags = ${common.build_flags} -DMY_LANGUAGE=fr-FR

[env:tasmota-GR]
build_flags = ${common.build_flags} -DMY_LANGUAGE=el-GR

[env:tasmota-HE]
build_flags = ${common.build_flags} -DMY_LANGUAGE=he-HE

[env:tasmota-HU]
build_flags = ${common.build_flags} -DMY_LANGUAGE=hu-HU

[env:tasmota-IT]
build_flags = ${common.build_flags} -DMY_LANGUAGE=it-IT

[env:tasmota-KO]
build_flags = ${common.build_flags} -DMY_LANGUAGE=ko-KO

[env:tasmota-NL]
build_flags = ${common.build_flags} -DMY_LANGUAGE=nl-NL

[env:tasmota-PL]
build_flags = ${common.build_flags} -DMY_LANGUAGE=pl-PL

[env:tasmota-PT]
build_flags = ${common.build_flags} -DMY_LANGUAGE=pt-PT

[env:tasmota-RU]
build_flags = ${common.build_flags} -DMY_LANGUAGE=ru-RU

[env:tasmota-SE]
build_flags = ${common.build_flags} -DMY_LANGUAGE=sv-SE

[env:tasmota-SK]
build_flags = ${common.build_flags} -DMY_LANGUAGE=sk-SK

[env:tasmota-TR]
build_flags = ${common.build_flags} -DMY_LANGUAGE=tr-TR

[env:tasmota-TW]
build_flags = ${common.build_flags} -DMY_LANGUAGE=zh-TW

[env:tasmota-UK]
build_flags = ${common.build_flags} -DMY_LANGUAGE=uk-UK
