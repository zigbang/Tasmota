; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
description = Provide ESP8266 / ESP32 based devices with Web, MQTT and OTA firmware
src_dir = tasmota
lib_dir = lib/default
boards_dir = boards
build_cache_dir = .cache
extra_configs = platformio_tasmota_cenv.ini
default_envs = 
	tasmota

[common]
framework = arduino
board_build.filesystem = littlefs
custom_unpack_dir = unpacked_littlefs
board = esp8266_4M2M
platform = ${core.platform}
platform_packages = ${core.platform_packages}
build_unflags = ${core.build_unflags}
build_flags = ${core.build_flags}
monitor_speed = 115200
monitor_port = COM5
upload_speed = 115200
upload_resetmethod = nodemcu
upload_port = /dev/tty.usbserial-14110
extra_scripts = ${scripts_defaults.extra_scripts}
lib_ldf_mode = chain
lib_compat_mode = strict
shared_libdeps_dir = lib
lib_extra_dirs = ${library.lib_extra_dirs}

[scripts_defaults]
extra_scripts = pio-tools/strip-floats.py
	pio-tools/name-firmware.py
	pio-tools/gzip-firmware.py
	pio-tools/override_copy.py
	pio-tools/download_fs.py

[esp_defaults]
build_unflags = -Wall
	-Wdeprecated-declarations
build_flags = -DCORE_DEBUG_LEVEL=0
	-Wl,-Map,firmware.map
	-Wno-deprecated-declarations
	-mtarget-align
	-free
	-fipa-pta
	-Wreturn-type
	-D_IR_ENABLE_DEFAULT_=false
	-DDECODE_HASH=true -DDECODE_NEC=true -DSEND_NEC=true
	-DDECODE_RC5=true -DSEND_RC5=true -DDECODE_RC6=true -DSEND_RC6=true
	-DUSE_CONFIG_OVERRIDE

[esp82xx_defaults]
build_flags = ${esp_defaults.build_flags}
	-DNDEBUG
	-DFP_IN_IROM
	-DBEARSSL_SSL_BASIC
	-DPIO_FRAMEWORK_ARDUINO_ESPRESSIF_SDK22x_190703
	-DPIO_FRAMEWORK_ARDUINO_LWIP2_HIGHER_BANDWIDTH_LOW_FLASH
	-DVTABLES_IN_FLASH
	-DPSTR_ALIGN=1
	-DMIMETYPE_MINIMAL

[irremoteesp_full]
build_flags = -DUSE_IR_REMOTE_FULL
	-U_IR_ENABLE_DEFAULT_
	-DDECODE_PRONTO=false -DSEND_PRONTO=false

[core]
platform = espressif8266 @ 2.6.3
platform_packages = tasmota/framework-arduinoespressif8266 @ ~2.7.4
build_unflags = ${esp_defaults.build_unflags}
build_flags = ${esp82xx_defaults.build_flags}
	-DWAVEFORM_LOCKED_PWM

[common32]
framework = ${common.framework}
platform = ${core32.platform}
platform_packages = ${core32.platform_packages}
build_unflags = ${core32.build_unflags}
build_flags = ${core32.build_flags}
board = esp32_4M
board_build.filesystem = ${common.board_build.filesystem}
custom_unpack_dir = ${common.custom_unpack_dir}
monitor_speed = 115200
upload_port = COM4
upload_resetmethod = ${common.upload_resetmethod}
upload_speed = 921600
extra_scripts = ${common.extra_scripts}
lib_ldf_mode = ${common.lib_ldf_mode}
lib_compat_mode = ${common.lib_compat_mode}
shared_libdeps_dir = lib
lib_extra_dirs = ${library.lib_extra_dirs}
	lib/libesp32
	lib/libesp32_lvgl
	lib/libesp32_div
	lib/libesp32_epdiy

[esp32_defaults]
build_unflags = ${esp_defaults.build_unflags}
	-Wpointer-arith
build_flags = ${esp_defaults.build_flags}
	-DBUFFER_LENGTH=128
	-DHTTP_UPLOAD_BUFLEN=2048
	-DMQTT_MAX_PACKET_SIZE=1200
	-Duint32=uint32_t
	-Duint16=uint16_t
	-Duint8=uint8_t
	-Dsint8_t=int8_t
	-Dsint32_t=int32_t
	-Dsint16_t=int16_t
	-Dmemcpy_P=memcpy
	-Dmemcmp_P=memcmp
	-DUSE_4K_RSA
	-I$PROJECT_DIR/include
	-include "sdkconfig.h"
	-include "esp32x_fixes.h"

[core32]
platform = espressif32 @ 3.2.0
platform_packages = platformio/tool-mklittlefs @ ~1.203.200522
build_unflags = ${esp32_defaults.build_unflags}
build_flags = ${esp32_defaults.build_flags}

[env]
platform = ${common.platform}
platform_packages = ${common.platform_packages}
framework = ${common.framework}
board = ${common.board}
board_build.filesystem = ${common.board_build.filesystem}
build_unflags = ${common.build_unflags}
build_flags = ${common.build_flags}
monitor_speed = ${common.monitor_speed}
upload_port = ${common.upload_port}
upload_resetmethod = ${common.upload_resetmethod}
upload_speed = ${common.upload_speed}
extra_scripts = ${common.extra_scripts}
lib_extra_dirs = ${common.lib_extra_dirs}
lib_ldf_mode = ${common.lib_ldf_mode}
lib_compat_mode = ${common.lib_compat_mode}
lib_ignore = 
	Servo(esp8266)
	ESP8266AVRISP
	ESP8266LLMNR
	ESP8266NetBIOS
	ESP8266SSDP
	SP8266WiFiMesh
	Ethernet(esp8266)
	GDBStub
	TFT_Touch_Shield_V2
	ESP8266HTTPUpdateServer
	ESP8266WiFiMesh
	EspSoftwareSerial
	SPISlave
	Hash
	ArduinoOTA

[env:tasmota]
lib_deps = fhessel/esp32_https_server@^1.0.0

[env:tasmota-minimal]
build_flags = ${common.build_flags} -DFIRMWARE_MINIMAL
lib_extra_dirs = 
lib_deps = fhessel/esp32_https_server@^1.0.0

[env:tasmota-lite]
build_flags = ${common.build_flags} -DFIRMWARE_LITE
lib_extra_dirs = lib/lib_ssl
lib_deps = fhessel/esp32_https_server@^1.0.0

[env:tasmota-knx]
build_flags = ${common.build_flags} -DFIRMWARE_KNX_NO_EMULATION
lib_extra_dirs = lib/lib_basic, lib/lib_div
lib_deps = fhessel/esp32_https_server@^1.0.0

[env:tasmota-sensors]
build_flags = ${common.build_flags} -DFIRMWARE_SENSORS
lib_extra_dirs = lib/lib_basic, lib/lib_i2c, lib/lib_rf, lib/lib_div
lib_deps = fhessel/esp32_https_server@^1.0.0

[env:tasmota-display]
build_flags = ${common.build_flags} -DFIRMWARE_DISPLAYS
lib_extra_dirs = lib/lib_basic, lib/lib_display
lib_deps = fhessel/esp32_https_server@^1.0.0

[env:tasmota-ir]
build_flags = ${common.build_flags} ${irremoteesp_full.build_flags} -DFIRMWARE_IR
lib_extra_dirs = lib/lib_basic
lib_deps = fhessel/esp32_https_server@^1.0.0

[env:tasmota-ircustom]
build_flags = ${common.build_flags} ${irremoteesp_full.build_flags} -DFIRMWARE_IR_CUSTOM
lib_deps = fhessel/esp32_https_server@^1.0.0

[env:tasmota-zbbridge]
build_flags = ${common.build_flags} -DFIRMWARE_ZBBRIDGE
board = esp8266_2M256
board_build.f_cpu = 160000000L
lib_extra_dirs = lib/lib_ssl
lib_deps = fhessel/esp32_https_server@^1.0.0

[env:tasmota-zigbee]
build_flags = ${common.build_flags} -DUSE_ZIGBEE -DUSE_CCLOADER -DUSE_UFILESYS
board = esp8266_4M2M
board_build.f_cpu = 160000000L
lib_deps = fhessel/esp32_https_server@^1.0.0

[env:tasmota-AF]
build_flags = ${common.build_flags} -DMY_LANGUAGE=af_AF
lib_deps = fhessel/esp32_https_server@^1.0.0

[env:tasmota-BG]
build_flags = ${common.build_flags} -DMY_LANGUAGE=bg_BG
lib_deps = fhessel/esp32_https_server@^1.0.0

[env:tasmota-BR]
build_flags = ${common.build_flags} -DMY_LANGUAGE=pt_BR
lib_deps = fhessel/esp32_https_server@^1.0.0

[env:tasmota-CN]
build_flags = ${common.build_flags} -DMY_LANGUAGE=zh_CN
lib_deps = fhessel/esp32_https_server@^1.0.0

[env:tasmota-CZ]
build_flags = ${common.build_flags} -DMY_LANGUAGE=cs_CZ
lib_deps = fhessel/esp32_https_server@^1.0.0

[env:tasmota-DE]
build_flags = ${common.build_flags} -DMY_LANGUAGE=de_DE
lib_deps = fhessel/esp32_https_server@^1.0.0

[env:tasmota-ES]
build_flags = ${common.build_flags} -DMY_LANGUAGE=es_ES
lib_deps = fhessel/esp32_https_server@^1.0.0

[env:tasmota-FR]
build_flags = ${common.build_flags} -DMY_LANGUAGE=fr_FR
lib_deps = fhessel/esp32_https_server@^1.0.0

[env:tasmota-FY]
build_flags = ${common.build_flags} -DMY_LANGUAGE=fy_NL
lib_deps = fhessel/esp32_https_server@^1.0.0

[env:tasmota-GR]
build_flags = ${common.build_flags} -DMY_LANGUAGE=el_GR
lib_deps = fhessel/esp32_https_server@^1.0.0

[env:tasmota-HE]
build_flags = ${common.build_flags} -DMY_LANGUAGE=he_HE
lib_deps = fhessel/esp32_https_server@^1.0.0

[env:tasmota-HU]
build_flags = ${common.build_flags} -DMY_LANGUAGE=hu_HU
lib_deps = fhessel/esp32_https_server@^1.0.0

[env:tasmota-IT]
build_flags = ${common.build_flags} -DMY_LANGUAGE=it_IT
lib_deps = fhessel/esp32_https_server@^1.0.0

[env:tasmota-KO]
build_flags = ${common.build_flags} -DMY_LANGUAGE=ko_KO
lib_deps = fhessel/esp32_https_server@^1.0.0

[env:tasmota-NL]
build_flags = ${common.build_flags} -DMY_LANGUAGE=nl_NL
lib_deps = fhessel/esp32_https_server@^1.0.0

[env:tasmota-PL]
build_flags = ${common.build_flags} -DMY_LANGUAGE=pl_PL
lib_deps = fhessel/esp32_https_server@^1.0.0

[env:tasmota-PT]
build_flags = ${common.build_flags} -DMY_LANGUAGE=pt_PT
lib_deps = fhessel/esp32_https_server@^1.0.0

[env:tasmota-RO]
build_flags = ${common.build_flags} -DMY_LANGUAGE=ro_RO
lib_deps = fhessel/esp32_https_server@^1.0.0

[env:tasmota-RU]
build_flags = ${common.build_flags} -DMY_LANGUAGE=ru_RU
lib_deps = fhessel/esp32_https_server@^1.0.0

[env:tasmota-SE]
build_flags = ${common.build_flags} -DMY_LANGUAGE=sv_SE
lib_deps = fhessel/esp32_https_server@^1.0.0

[env:tasmota-SK]
build_flags = ${common.build_flags} -DMY_LANGUAGE=sk_SK
lib_deps = fhessel/esp32_https_server@^1.0.0

[env:tasmota-TR]
build_flags = ${common.build_flags} -DMY_LANGUAGE=tr_TR
lib_deps = fhessel/esp32_https_server@^1.0.0

[env:tasmota-TW]
build_flags = ${common.build_flags} -DMY_LANGUAGE=zh_TW
lib_deps = fhessel/esp32_https_server@^1.0.0

[env:tasmota-UK]
build_flags = ${common.build_flags} -DMY_LANGUAGE=uk_UA
lib_deps = fhessel/esp32_https_server@^1.0.0

[env:tasmota-VN]
build_flags = ${common.build_flags} -DMY_LANGUAGE=vi_VN
lib_deps = fhessel/esp32_https_server@^1.0.0

[env:tasmota32_base]
framework = ${common.framework}
platform = ${common32.platform}
platform_packages = ${common32.platform_packages}
board = ${common32.board}
monitor_speed = ${common32.monitor_speed}
upload_port = ${common32.upload_port}
upload_resetmethod = ${common32.upload_resetmethod}
upload_speed = ${common32.upload_speed}
extra_scripts = ${common32.extra_scripts}
build_unflags = ${common32.build_unflags}
build_flags = ${common32.build_flags}
lib_extra_dirs = ${common32.lib_extra_dirs}
lib_ldf_mode = ${common32.lib_ldf_mode}
lib_compat_mode = ${common32.lib_compat_mode}
lib_ignore = 
	ESP32 Azure IoT Arduino
	ESP32 Async UDP
	ESP32 BLE Arduino
	NetBIOS
	ESP32
	Preferences
	BluetoothSerial
	ArduinoOTA
lib_deps = fhessel/esp32_https_server@^1.0.0

[env:tasmota32]
extends = env:tasmota32_base
build_flags = ${common32.build_flags} -DFIRMWARE_TASMOTA32
lib_deps = fhessel/esp32_https_server@^1.0.0

[env:tasmota32_8M]
extends = env:tasmota32_base
board = esp32_8M
build_flags = ${common32.build_flags} -DFIRMWARE_TASMOTA32
lib_deps = fhessel/esp32_https_server@^1.0.0

[env:tasmota32_16M]
extends = env:tasmota32_base
board = esp32_16M
build_flags = ${common32.build_flags} -DFIRMWARE_TASMOTA32
lib_deps = fhessel/esp32_https_server@^1.0.0

[env:tasmota32solo1]
extends = env:tasmota32_base
platform_packages = tasmota/framework-arduinoespressif32 @ 3.10006.210420
	platformio/tool-mklittlefs @ ~1.203.200522
build_flags = ${common32.build_flags} -DFIRMWARE_TASMOTA32
lib_deps = fhessel/esp32_https_server@^1.0.0

[env:tasmota32-webcam]
extends = env:tasmota32_base
board = esp32-cam
board_build.flash_mode = qio
build_flags = ${common32.build_flags} -DBOARD_HAS_PSRAM -mfix-esp32-psram-cache-issue -lc-psram-workaround -lm-psram-workaround -DFIRMWARE_WEBCAM
lib_extra_dirs = lib/libesp32, lib/lib_basic
lib_deps = fhessel/esp32_https_server@^1.0.0

[env:tasmota32-odroidgo]
extends = env:tasmota32_base
board = esp32-odroid
board_build.flash_mode = qio
build_flags = ${common32.build_flags} -DBOARD_HAS_PSRAM -mfix-esp32-psram-cache-issue -lc-psram-workaround -lm-psram-workaround -DFIRMWARE_ODROID_GO
lib_extra_dirs = lib/libesp32, lib/lib_basic, lib/lib_i2c, lib/lib_rf, lib/lib_div, lib/lib_ssl, lib/lib_display
lib_deps = fhessel/esp32_https_server@^1.0.0

[env:tasmota32-core2]
extends = env:tasmota32_base
board = esp32-m5core2
board_build.flash_mode = qio
build_flags = ${common32.build_flags} -DBOARD_HAS_PSRAM -mfix-esp32-psram-cache-issue -lc-psram-workaround -lm-psram-workaround -DFIRMWARE_M5STACK_CORE2
lib_extra_dirs = lib/libesp32, lib/lib_basic, lib/lib_i2c, lib/lib_rf, lib/lib_div, lib/lib_ssl, lib/lib_display, lib/lib_audio
lib_deps = fhessel/esp32_https_server@^1.0.0

[env:tasmota32-bluetooth]
extends = env:tasmota32_base
build_flags = ${common32.build_flags} -DFIRMWARE_BLUETOOTH
lib_extra_dirs = lib/libesp32, lib/libesp32_div, lib/lib_basic, lib/lib_i2c, lib/lib_ssl
lib_deps = fhessel/esp32_https_server@^1.0.0

[env:tasmota32-display]
extends = env:tasmota32_base
build_flags = ${common32.build_flags} -DFIRMWARE_DISPLAYS
lib_extra_dirs = lib/libesp32, lib/lib_basic, lib/lib_display
lib_deps = fhessel/esp32_https_server@^1.0.0

[env:tasmota32-ir]
extends = env:tasmota32_base
build_flags = ${common32.build_flags} ${irremoteesp_full.build_flags} -DFIRMWARE_IR
lib_extra_dirs = lib/libesp32, lib/lib_basic
lib_deps = fhessel/esp32_https_server@^1.0.0

[env:tasmota32-ircustom]
extends = env:tasmota32_base
build_flags = ${common32.build_flags} ${irremoteesp_full.build_flags} -DFIRMWARE_IR_CUSTOM
lib_deps = fhessel/esp32_https_server@^1.0.0

[env:tasmota32-AF]
extends = env:tasmota32_base
build_flags = ${common32.build_flags} -DMY_LANGUAGE=af_AF -DFIRMWARE_TASMOTA32
lib_deps = fhessel/esp32_https_server@^1.0.0

[env:tasmota32-BG]
extends = env:tasmota32_base
build_flags = ${common32.build_flags} -DMY_LANGUAGE=bg_BG -DFIRMWARE_TASMOTA32
lib_deps = fhessel/esp32_https_server@^1.0.0

[env:tasmota32-BR]
extends = env:tasmota32_base
build_flags = ${common32.build_flags} -DMY_LANGUAGE=pt_BR -DFIRMWARE_TASMOTA32
lib_deps = fhessel/esp32_https_server@^1.0.0

[env:tasmota32-CN]
extends = env:tasmota32_base
build_flags = ${common32.build_flags} -DMY_LANGUAGE=zh_CN -DFIRMWARE_TASMOTA32
lib_deps = fhessel/esp32_https_server@^1.0.0

[env:tasmota32-CZ]
extends = env:tasmota32_base
build_flags = ${common32.build_flags} -DMY_LANGUAGE=cs_CZ -DFIRMWARE_TASMOTA32
lib_deps = fhessel/esp32_https_server@^1.0.0

[env:tasmota32-DE]
extends = env:tasmota32_base
build_flags = ${common32.build_flags} -DMY_LANGUAGE=de_DE -DFIRMWARE_TASMOTA32
lib_deps = fhessel/esp32_https_server@^1.0.0

[env:tasmota32-ES]
extends = env:tasmota32_base
build_flags = ${common32.build_flags} -DMY_LANGUAGE=es_ES -DFIRMWARE_TASMOTA32
lib_deps = fhessel/esp32_https_server@^1.0.0

[env:tasmota32-FR]
extends = env:tasmota32_base
build_flags = ${common32.build_flags} -DMY_LANGUAGE=fr_FR -DFIRMWARE_TASMOTA32
lib_deps = fhessel/esp32_https_server@^1.0.0

[env:tasmota32-FY]
extends = env:tasmota32_base
build_flags = ${common32.build_flags} -DMY_LANGUAGE=fy_NL -DFIRMWARE_TASMOTA32
lib_deps = fhessel/esp32_https_server@^1.0.0

[env:tasmota32-GR]
extends = env:tasmota32_base
build_flags = ${common32.build_flags} -DMY_LANGUAGE=el_GR -DFIRMWARE_TASMOTA32
lib_deps = fhessel/esp32_https_server@^1.0.0

[env:tasmota32-HE]
extends = env:tasmota32_base
build_flags = ${common32.build_flags} -DMY_LANGUAGE=he_HE -DFIRMWARE_TASMOTA32
lib_deps = fhessel/esp32_https_server@^1.0.0

[env:tasmota32-HU]
extends = env:tasmota32_base
build_flags = ${common32.build_flags} -DMY_LANGUAGE=hu_HU -DFIRMWARE_TASMOTA32
lib_deps = fhessel/esp32_https_server@^1.0.0

[env:tasmota32-IT]
extends = env:tasmota32_base
build_flags = ${common32.build_flags} -DMY_LANGUAGE=it_IT -DFIRMWARE_TASMOTA32
lib_deps = fhessel/esp32_https_server@^1.0.0

[env:tasmota32-KO]
extends = env:tasmota32_base
build_flags = ${common32.build_flags} -DMY_LANGUAGE=ko_KO -DFIRMWARE_TASMOTA32
lib_deps = fhessel/esp32_https_server@^1.0.0

[env:tasmota32-NL]
extends = env:tasmota32_base
build_flags = ${common32.build_flags} -DMY_LANGUAGE=nl_NL -DFIRMWARE_TASMOTA32
lib_deps = fhessel/esp32_https_server@^1.0.0

[env:tasmota32-PL]
extends = env:tasmota32_base
build_flags = ${common32.build_flags} -DMY_LANGUAGE=pl_PL -DFIRMWARE_TASMOTA32
lib_deps = fhessel/esp32_https_server@^1.0.0

[env:tasmota32-PT]
extends = env:tasmota32_base
build_flags = ${common32.build_flags} -DMY_LANGUAGE=pt_PT -DFIRMWARE_TASMOTA32
lib_deps = fhessel/esp32_https_server@^1.0.0

[env:tasmota32-RO]
extends = env:tasmota32_base
build_flags = ${common32.build_flags} -DMY_LANGUAGE=ro_RO -DFIRMWARE_TASMOTA32
lib_deps = fhessel/esp32_https_server@^1.0.0

[env:tasmota32-RU]
extends = env:tasmota32_base
build_flags = ${common32.build_flags} -DMY_LANGUAGE=ru_RU -DFIRMWARE_TASMOTA32
lib_deps = fhessel/esp32_https_server@^1.0.0

[env:tasmota32-SE]
extends = env:tasmota32_base
build_flags = ${common32.build_flags} -DMY_LANGUAGE=sv_SE -DFIRMWARE_TASMOTA32
lib_deps = fhessel/esp32_https_server@^1.0.0

[env:tasmota32-SK]
extends = env:tasmota32_base
build_flags = ${common32.build_flags} -DMY_LANGUAGE=sk_SK -DFIRMWARE_TASMOTA32
lib_deps = fhessel/esp32_https_server@^1.0.0

[env:tasmota32-TR]
extends = env:tasmota32_base
build_flags = ${common32.build_flags} -DMY_LANGUAGE=tr_TR -DFIRMWARE_TASMOTA32
lib_deps = fhessel/esp32_https_server@^1.0.0

[env:tasmota32-TW]
extends = env:tasmota32_base
build_flags = ${common32.build_flags} -DMY_LANGUAGE=zh_TW -DFIRMWARE_TASMOTA32
lib_deps = fhessel/esp32_https_server@^1.0.0

[env:tasmota32-UK]
extends = env:tasmota32_base
build_flags = ${common32.build_flags} -DMY_LANGUAGE=uk_UA -DFIRMWARE_TASMOTA32
lib_deps = fhessel/esp32_https_server@^1.0.0

[env:tasmota32-VN]
extends = env:tasmota32_base
build_flags = ${common32.build_flags} -DMY_LANGUAGE=vi_VN -DFIRMWARE_TASMOTA32
lib_deps = fhessel/esp32_https_server@^1.0.0

[env:ltvb-esp-wrover]
extends = env:tasmota32_base
; board = esp-wrover-kit
monitor_speed = 115200
monitor_port = /dev/tty.usbserial-0001
upload_speed = 115200
upload_port = /dev/tty.usbserial-0001
lib_deps = fhessel/esp32_https_server@^1.0.0

[env:ltvb-esp32cam]
extends = env:tasmota32_base
board = esp32cam
monitor_speed = 115200
monitor_port = /dev/tty.usbserial-14110
upload_speed = 115200
upload_port = /dev/tty.usbserial-14110
lib_deps = fhessel/esp32_https_server@^1.0.0

[library]
shared_libdeps_dir = lib
lib_extra_dirs = 
	lib/lib_basic
	lib/lib_i2c
	lib/lib_display
	lib/lib_ssl
	lib/lib_audio
	lib/lib_rf
	lib/lib_div

[core_stage]
platform = espressif8266 @ 3.0.0
platform_packages = 
	tasmota/toolchain-xtensa @ 5.100200.210303
build_unflags = ${esp_defaults.build_unflags}
	-Wswitch-unreachable
build_flags = ${esp82xx_defaults.build_flags}
	-D PIO_FRAMEWORK_ARDUINO_MMU_CACHE16_IRAM48_SECHEAP_SHARED
	-Wno-switch-unreachable

[env:tasmota32idf3]
extends = env:tasmota32_base
platform_packages = framework-arduinoespressif32 @ https://github.com/Jason2866/esp32-arduino-lib-builder/raw/framework-arduinoespressif32/framework-arduinoespressif32-release_v3.3-6aaddf972.tar.gz
	platformio/tool-esptoolpy @ ~1.30100
	platformio/tool-mklittlefs @ ~1.203.200522
build_unflags = ${esp32_defaults.build_unflags}
build_flags = ${esp32_defaults.build_flags}
lib_deps = fhessel/esp32_https_server@^1.0.0

[env:tasmota32s2]
extends = env:tasmota32_base
board = esp32s2
platform = https://github.com/platformio/platform-espressif32.git#feature/idf-master
platform_packages = framework-arduinoespressif32 @ https://github.com/Jason2866/esp32-arduino-lib-builder/releases/download/291/framework-arduinoespressif32-master-1d7068e4b.tar.gz
	platformio/tool-mklittlefs @ ~1.203.200522
build_unflags = ${esp32_defaults.build_unflags}
build_flags = ${common32.build_flags} -DFIRMWARE_LITE
lib_extra_dirs = lib/libesp32
lib_ignore = 
	NimBLE-Arduino
	Micro-RTSP
	ESP32-HomeKit
lib_deps = fhessel/esp32_https_server@^1.0.0

[env:tasmota32c3]
extends = env:tasmota32_base
board = esp32c3
platform = https://github.com/Jason2866/platform-espressif32.git#feature/arduino-c3
platform_packages = framework-arduinoespressif32 @ https://github.com/Jason2866/esp32-arduino-lib-builder/releases/download/291/framework-arduinoespressif32-master-1d7068e4b.tar.gz
	tasmota/toolchain-riscv32
	platformio/tool-mklittlefs @ ~1.203.200522
build_unflags = ${esp32_defaults.build_unflags}
	-Wswitch-unreachable
	-mtarget-align
build_flags = ${esp32_defaults.build_flags}
	-Wno-switch-unreachable
lib_extra_dirs = lib/libesp32
	lib/libesp32_lvgl
	lib/lib_basic
	lib/lib_i2c
	lib/lib_ssl
	lib/lib_display
lib_ignore = 
	NimBLE-Arduino
	Micro-RTSP
lib_deps = fhessel/esp32_https_server@^1.0.0

[env:tasmota32idf4]
extends = env:tasmota32_base
platform = https://github.com/platformio/platform-espressif32.git#feature/idf-master
platform_packages = framework-arduinoespressif32 @ https://github.com/Jason2866/esp32-arduino-lib-builder/releases/download/291/framework-arduinoespressif32-master-1d7068e4b.tar.gz
	toolchain-xtensa32 @ ~2.80400.0
	platformio/tool-mklittlefs @ ~1.203.200522
build_unflags = ${esp32_defaults.build_unflags}
build_flags = ${esp32_defaults.build_flags}
lib_deps = fhessel/esp32_https_server@^1.0.0

[env:tasmota-debug]
build_type = debug
build_unflags = ${esp_defaults.build_unflags}
build_flags = ${esp82xx_defaults.build_flags}
lib_deps = fhessel/esp32_https_server@^1.0.0

[env:tasmota32-debug]
extends = env:tasmota32_base
build_type = debug
build_unflags = ${esp32_defaults.build_unflags}
build_flags = ${esp32_defaults.build_flags}
lib_deps = fhessel/esp32_https_server@^1.0.0
